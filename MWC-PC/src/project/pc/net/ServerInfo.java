package project.pc.net;

import project.pc.security.EKEProvider;

/**
 * Encapsulation of the data sent during UDP broadcast.
 *
 * <p>
 *     This data is broadcast by the {@link BroadcastThread}. This
 *     contains :
 *     <ul>
 *         <li>the public key of the server, </li>
 *         <li>status of the broadcast, and</li>
 *         <li>address of the server</li>
 *     </ul>
 * </p>
 * <p>
 *     This message helps a client to discover a server.
 * </p>
 *
 * @see project.pc.net.BroadcastThread
 */

public class ServerInfo {
    private byte[] mServerPubKey;
    private String mServerInfo;
    private String mAddress;
    private boolean mStopFlag;

    /**
     * Constructor.
     *
     * Initializes the <code>ServerInfo</code>.
     *
     * @param publicKey public key of the server generated by
     *                  {@link project.pc.security.EKEProvider#getBase64EncodedPubKey()}.
     * @param serverInfo canonical hostname of the server.
     * @see project.pc.security.EKEProvider#getBase64EncodedPubKey()
     */
    public ServerInfo(byte[] publicKey, String serverInfo) {
        mServerPubKey = publicKey;
        mServerInfo = serverInfo;
        mStopFlag = false;
    }

    /**
     * Compares two <code>ServerInfo</code> objects.
     *
     * @param obj the object to be compared.
     * @return <code>true</code>, if the two objects are equal, <br/>
     *         <code>false</code>, otherwise.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj)    return true;
        if (obj == null)    return false;
        if (getClass() != obj.getClass())   return false;
        ServerInfo other = (ServerInfo) obj;
        return mAddress.equals(other.mAddress);
    }

    void setServerAddress(String address) { mAddress = address; }

    /**
     * Sets the status of the <i>broadcast</i> as <i>inactive</i>.
     */
    void setStopFlag() { mStopFlag = true; }

    /**
     * Sets the status of the <i>broadcast</i> as <i>active</i>.
     */
    void clearStopFlag() { mStopFlag = false; }

    public boolean getStopFlag() { return mStopFlag; }
    public byte[] getServerPubKey() { return mServerPubKey; }
    public String getServerInfo() { return mServerInfo; }
    public String getAddress() { return mAddress; }
}